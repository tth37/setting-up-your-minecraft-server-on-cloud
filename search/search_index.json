{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Setting Up your Minecraft Server on cloud - Beginner's Guide Minecraft servers allow players to play together in a shared world. This tutorial will guide you through the process of setting up your own Minecraft Server on the cloud. Note: This tutorial is designed for beginners , so you only need very basic computer or networking skills to follow these steps. If you're an expert looking for a more customized deployment, this tutorial may not be the right fit for you. Table of Contents\ud83d\uddc2\ufe0f Preparation\u26a0 Familiarize yourself with basic command-line interface operations , such as \"Change Directory ( cd )\", \"Make Directory ( mkdir )\", etc. If you are not familiar with these, you can refer to the Linux Command Cheat Sheet before continuing. Make sure you have a computer with Internet access. Keep in mind that setting up a server on the cloud may require a financial investment. Operation Instruction\ud83d\udcd5 Purchasing a Cloud Server To set up your own Minecraft Server on the cloud, you will need to purchase a cloud server from a cloud service provider. Some popular options include Amazon , Google Cloud , and Microsoft Azure . For users in mainland China, Aliyun and Tencent Cloud may be better choices. If you don't already have an account with a cloud service provider, create one now. Follow the instructions on the provider's website and log in to your account. In this tutorial, we will use Aliyun as an example. To purchase a server, go to the ECS (Elastic Compute Service) purchasing page and select the following configurations: Configuration Recommendation Server Region choose a region that is geographically close to you. Instance Specification choose a configuration with at least 1 vCPU and 4 GiB of memory. Storage choose a configuration with at least 20 GiB of storage. Operating System choose Ubuntu 20.04 LTS . Network Bandwidth choose a configuration with at least 2 Mbps of bandwidth. Others accept the default settings for all other options. Once you have purchased your server, you have a few options for connecting to it: Use the web terminal provided by your cloud service provider. Use the ssh tool to connect to the server. Use XShell to connect to the server. If you encounter any issues while trying to connect to your server, you can reach out to your cloud service provider's customer support for help. Deploying Server Now that you have purchased your Cloud Server and connected to it via a terminal, you are ready to deploy your Minecraft Server. Installing Java The PaperMC server distribution requires that you have Java installed on your server. You are recommended to install OpenJDK 17 from the official repositories. To do this, run the following commands: sudo apt update sudo apt install openjdk-17-jdk-headless To verify that Java is installed and available on your server, run the following command: java -version Downloading PaperMC Server file To download the PaperMC server file, first create a new folder to store all of your server files. In this tutorial, we will use ~/mc-server/ as the path for this folder. You can use a different path if you prefer. To create the folder and navigate to it, run the following commands: mkdir ~/mc-server cd ~/mc-server To download the latest version of PaperMC, go to the PaperMC Download Page and copy the latest download link for the .jar file. Then, use the wget command to download the file: wget <download_link.jar> To run the .jar file and start PaperMC on your server for the first time, use the following command, remembering to replace paper-version.jar with the actual name of the downloaded .jar file: java -jar paper-version.jar --no-gui This will generate a file called eula.txt in the root directory of your PaperMC server. This file contains the end user license agreement for PaperMC, which you must agree to in order to use the software. To edit the eula.txt file and agree to the EULA for PaperMC, use the nano command as follows: nano eula.txt This will open the eula.txt file in the nano text editor. Use the arrow keys to navigate to the line that says eula=false and change it to eula=true . Then, press CTRL+S to save the changes, and press CTRL+X to exit the editor. Now the server has been set up, and you can simply run it with java -jar paper-version.jar --nogui ! Optimizing and Managing Server (optional) Editing server.properties file To optimize the performance of your PaperMC server, you can edit the server.properties file to change the simulation-distance and view-distance settings. These settings control how far the server simulates the world and renders it for players, respectively. By reducing these values, you can improve the server's performance without sacrificing too much of the gameplay experience. To edit the server.properties file, use a text editor to open the file and locate the simulation-distance and view-distance properties. Then, change the values of these properties to 4 and 7 , respectively, as shown in the example below: # View distance in chunks. view-distance=7 # The maximum number of chunks to simulate on each player's client. simulation-distance=4 For more optimization tricks, you can refer to this article . Setting Administrators and Blacklists To set administrators for your PaperMC server, you can use the ops.json file. This file contains a list of all the players who have operator privileges on the server. To add a player to the list, simply use a text editor to open the ops.json file and add the player's name to the list, as shown in the example below: [\"player1\", \"player2\"] In addition to setting administrators, you can also use the server.properties file to set a server-wide blacklist. This can be useful for banning players who have broken the rules or are causing problems on the server. To set a blacklist, use a text editor to open the server.properties file and locate the blacklist property. Then, set the property to true , as shown in the example below: # Whether the server should ignore players in the whitelist. white-list=false # Whether the server should ignore players not in the whitelist. blacklist=true Once you have set the blacklist property to true , you can add players to the blacklist by using the banned-players.json file. This file contains a list of all the players who are banned from the server. To add a player to the list, use a text editor to open the banned-players.json file and add the player's name to the list, as shown in the example below: [\"player1\", \"player2\"] By setting administrators and using a blacklist, you can manage who has access to your PaperMC server and ensure that only trusted players can play on it. Guidance for Players\ud83c\udfae Congratulations! You have successfully set up and optimized your PaperMC Server. To invite your friends to join your PaperMC server, you will need the IP address of your server. You can obtain the IP address from your cloud service provider. Once you have the IP address, you can share it with your friends and they can use it to connect to your server. To connect to your server, your friends will need to open the Minecraft game on their computer and select the \" Multiplayer \" option from the main menu. Then, they can click the \" Add Server \" button and enter the IP address of your server in the \" Server Name \" field. After clicking \" Done \", your server should appear in the server list and your friends can connect to it by clicking on it and selecting \" Join Server \". Once your friends have successfully connected to your server, they will be able to play together with you and experience the world that you have created. Enjoy playing together!","title":"Setting Up your Minecraft Server on cloud - Beginner's Guide"},{"location":"#setting-up-your-minecraft-server-on-cloud-beginners-guide","text":"Minecraft servers allow players to play together in a shared world. This tutorial will guide you through the process of setting up your own Minecraft Server on the cloud. Note: This tutorial is designed for beginners , so you only need very basic computer or networking skills to follow these steps. If you're an expert looking for a more customized deployment, this tutorial may not be the right fit for you.","title":"Setting Up your Minecraft Server on cloud - Beginner's Guide"},{"location":"#table-of-contents","text":"","title":"Table of Contents\ud83d\uddc2\ufe0f"},{"location":"#preparation","text":"Familiarize yourself with basic command-line interface operations , such as \"Change Directory ( cd )\", \"Make Directory ( mkdir )\", etc. If you are not familiar with these, you can refer to the Linux Command Cheat Sheet before continuing. Make sure you have a computer with Internet access. Keep in mind that setting up a server on the cloud may require a financial investment.","title":"Preparation\u26a0"},{"location":"#operation-instruction","text":"","title":"Operation Instruction\ud83d\udcd5"},{"location":"#purchasing-a-cloud-server","text":"To set up your own Minecraft Server on the cloud, you will need to purchase a cloud server from a cloud service provider. Some popular options include Amazon , Google Cloud , and Microsoft Azure . For users in mainland China, Aliyun and Tencent Cloud may be better choices. If you don't already have an account with a cloud service provider, create one now. Follow the instructions on the provider's website and log in to your account. In this tutorial, we will use Aliyun as an example. To purchase a server, go to the ECS (Elastic Compute Service) purchasing page and select the following configurations: Configuration Recommendation Server Region choose a region that is geographically close to you. Instance Specification choose a configuration with at least 1 vCPU and 4 GiB of memory. Storage choose a configuration with at least 20 GiB of storage. Operating System choose Ubuntu 20.04 LTS . Network Bandwidth choose a configuration with at least 2 Mbps of bandwidth. Others accept the default settings for all other options. Once you have purchased your server, you have a few options for connecting to it: Use the web terminal provided by your cloud service provider. Use the ssh tool to connect to the server. Use XShell to connect to the server. If you encounter any issues while trying to connect to your server, you can reach out to your cloud service provider's customer support for help.","title":"Purchasing a Cloud Server"},{"location":"#deploying-server","text":"Now that you have purchased your Cloud Server and connected to it via a terminal, you are ready to deploy your Minecraft Server.","title":"Deploying Server"},{"location":"#installing-java","text":"The PaperMC server distribution requires that you have Java installed on your server. You are recommended to install OpenJDK 17 from the official repositories. To do this, run the following commands: sudo apt update sudo apt install openjdk-17-jdk-headless To verify that Java is installed and available on your server, run the following command: java -version","title":"Installing Java"},{"location":"#downloading-papermc-server-file","text":"To download the PaperMC server file, first create a new folder to store all of your server files. In this tutorial, we will use ~/mc-server/ as the path for this folder. You can use a different path if you prefer. To create the folder and navigate to it, run the following commands: mkdir ~/mc-server cd ~/mc-server To download the latest version of PaperMC, go to the PaperMC Download Page and copy the latest download link for the .jar file. Then, use the wget command to download the file: wget <download_link.jar> To run the .jar file and start PaperMC on your server for the first time, use the following command, remembering to replace paper-version.jar with the actual name of the downloaded .jar file: java -jar paper-version.jar --no-gui This will generate a file called eula.txt in the root directory of your PaperMC server. This file contains the end user license agreement for PaperMC, which you must agree to in order to use the software. To edit the eula.txt file and agree to the EULA for PaperMC, use the nano command as follows: nano eula.txt This will open the eula.txt file in the nano text editor. Use the arrow keys to navigate to the line that says eula=false and change it to eula=true . Then, press CTRL+S to save the changes, and press CTRL+X to exit the editor. Now the server has been set up, and you can simply run it with java -jar paper-version.jar --nogui !","title":"Downloading PaperMC Server file"},{"location":"#optimizing-and-managing-server-optional","text":"","title":"Optimizing and Managing Server (optional)"},{"location":"#editing-serverproperties-file","text":"To optimize the performance of your PaperMC server, you can edit the server.properties file to change the simulation-distance and view-distance settings. These settings control how far the server simulates the world and renders it for players, respectively. By reducing these values, you can improve the server's performance without sacrificing too much of the gameplay experience. To edit the server.properties file, use a text editor to open the file and locate the simulation-distance and view-distance properties. Then, change the values of these properties to 4 and 7 , respectively, as shown in the example below: # View distance in chunks. view-distance=7 # The maximum number of chunks to simulate on each player's client. simulation-distance=4 For more optimization tricks, you can refer to this article .","title":"Editing server.properties file"},{"location":"#setting-administrators-and-blacklists","text":"To set administrators for your PaperMC server, you can use the ops.json file. This file contains a list of all the players who have operator privileges on the server. To add a player to the list, simply use a text editor to open the ops.json file and add the player's name to the list, as shown in the example below: [\"player1\", \"player2\"] In addition to setting administrators, you can also use the server.properties file to set a server-wide blacklist. This can be useful for banning players who have broken the rules or are causing problems on the server. To set a blacklist, use a text editor to open the server.properties file and locate the blacklist property. Then, set the property to true , as shown in the example below: # Whether the server should ignore players in the whitelist. white-list=false # Whether the server should ignore players not in the whitelist. blacklist=true Once you have set the blacklist property to true , you can add players to the blacklist by using the banned-players.json file. This file contains a list of all the players who are banned from the server. To add a player to the list, use a text editor to open the banned-players.json file and add the player's name to the list, as shown in the example below: [\"player1\", \"player2\"] By setting administrators and using a blacklist, you can manage who has access to your PaperMC server and ensure that only trusted players can play on it.","title":"Setting Administrators and Blacklists"},{"location":"#guidance-for-players","text":"Congratulations! You have successfully set up and optimized your PaperMC Server. To invite your friends to join your PaperMC server, you will need the IP address of your server. You can obtain the IP address from your cloud service provider. Once you have the IP address, you can share it with your friends and they can use it to connect to your server. To connect to your server, your friends will need to open the Minecraft game on their computer and select the \" Multiplayer \" option from the main menu. Then, they can click the \" Add Server \" button and enter the IP address of your server in the \" Server Name \" field. After clicking \" Done \", your server should appear in the server list and your friends can connect to it by clicking on it and selecting \" Join Server \". Once your friends have successfully connected to your server, they will be able to play together with you and experience the world that you have created. Enjoy playing together!","title":"Guidance for Players\ud83c\udfae"}]}